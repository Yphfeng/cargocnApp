<template>
	<view class="mutual">
		<view class="searchHead">
			<image src="../../../static/images/back.png" class="back" @click="back"></image>
			<view class="searchBox" @click="jumpToSearch()">
				<image src="../../../static/images/search.png" class="search-img" ></image>
				<text class="searchMsg">{{searchData.searchVal ? searchData.searchVal : '搜索地址'}}</text>
			</view>
			<view class="addServiceBtn" @click="goReport">
				<image src="https://hyzg-app.oss-cn-beijing.aliyuncs.com/addW.png" class="add-img" ></image>
				<text class="addServiceBtnMsg">发布</text>
			</view>
		</view>
		
		<web-view
		 :webview-styles="webviewStyles"
			id="myMap1"
		  :src="srcUrl"
		  style="position: fixed; top: 80; left: 0; right: 0; bottom: 50;"
		  :style="webViewHeight"
		  class="mapView"
		  @message="reciveMessage"
		  @onPostMessage="recivePostMessage"
		>
		</web-view>
		
		<web-view v-if="showMapLoading" class="mapLoadingBox" src="../../../static/demo/data.html"></web-view>
		<view class="contentList" v-if="!showMapLoading" :class="contentShow ? 'isShow' : 'notShow'">
			<view class="contentListBtn" @click="showContentList()">
				<view class="contentStyleIcon"></view>
			</view>
			<view @click="showContentList()">
				<text class="contentStyleIconMsg">点击查看{{contentShow ? '地图' : '列表'}}</text>
			</view>
			<view class="listBox" v-if="contentShow">
				<list class="commentslist" loadmoreoffset="50" @loadmore="loadMore" ref="commentsRef">
						<refresh 
							:display="refreshing ? 'show' : 'hide'" 
							@refresh="onrefresh" 
							@pullingdown="onpullingdown"
							>
							<view class="loading-more">
								<loading-indicator style="margin-right:15px;"></loading-indicator>
								<text class="loading-more-text">{{refreshText}}</text>
							</view>
						</refresh>
						<cell class="dataList" v-for="(item, index) in commentsOption" :key="index" :ref="'cell' + index" :class="item.id == mapSelectId ? 'showDataBorder' : 'showNoBorder'">
							<image  @click="goDetail(item)" v-if="!item.avatar" class="userAvatar" src="/static/logo.png"></image>
							<image  @click="goDetail(item)" v-if="item.avatar" class="userAvatar" :src="item.avatar"></image>
							<view class="commentsContentBox">
								<view class="commentsHead">
									<view class="commentsHeadNameBox" @click="goDetail(item)">
										<text class="commentsHeadName">{{item.userName}}</text>
									</view>
									<view class="commentsDistance" @click="openLocation(item)">
										<text class="disTanceNum">{{getDistance(item.latitude, item.longitude).toFixed(1)}}km</text>
										<text class="disTanceSyb">｜</text>
										<image class="newnavigationIcon" src="https://hyzg-app.oss-cn-beijing.aliyuncs.com/newnavigationIcon.png"></image>
										<text class="disTanceMsg">去这里</text>
									</view>
								</view>
								<view class="commentsBody" @click="goDetail(item)">
									<text class="commentsMsg">{{item.description}}</text>
								</view>
								<view class="commentsAddress" @click="goDetail(item)">
									<image class="addressIcon" src="https://hyzg-app.oss-cn-beijing.aliyuncs.com/address.png"></image>
									<text class="addressMsg">{{item.address}}</text>
								</view>
								<view class="commentsImageBox" v-if="item.facadeImage">
									<image v-for="(imgItem, imgIndex) in item.facadeImageAry" :key="imgIndex" class="commentsImageList" :src="imgItem" @click="showBigImg(item, imgIndex)"></image>
								</view>
								<view class="commentsFoot">
									<view class="commentsTime" @click="goDetail(item)">
										<image class="commentsTimeIcon" src="https://hyzg-app.oss-cn-beijing.aliyuncs.com/time.png"></image>
										<text class="commentsTimeMsg">{{showCommentsTime(item)}}</text>
									</view>
									<view class="commentsStatus">
										<view class="commentsStatusBox" @click="situationStatusLike(1, 1, item)">
											<image class="commentsStatusIcon" :src="item.isLiked==1?'/static/images/already.png':'/static/images/praise.png'"></image>
											<text class="commentsStatusMsg">{{item.likeNum}}</text>
										</view>
										<view class="commentsStatusBox" style="margin-left:60rpx;" @click="situationStatusLike(1, 0, item)">
											<image class="commentsStatusIcon" :src="item.isDisLiked==1?'/static/images/badReview.png':'/static/images/stepOn.png'"></image>
											<text class="commentsStatusMsg">{{item.dislikeNum}}</text>
										</view>
										<view class="commentsStatusBox" style="margin-left:60rpx;" @click="goDetail(item)">
											<image class="commentsStatusIcon" src="https://hyzg-app.oss-cn-beijing.aliyuncs.com/comments.png"></image>
											<text class="commentsStatusMsg">{{item.commentNum}}</text>
										</view>
									</view>
								</view>
								<view class="commentsLine" v-if="item.id != mapSelectId"></view>
							</view>
						</cell>
						<cell v-if="isLoad">
							<view class="loading-more">
								<loading-indicator style="margin-right:15px;"></loading-indicator>
								<text class="loading-more-text">加载中...</text>
							</view>
						</cell>
						<cell v-if="noData">
							<view class="loading-more">
								<text class="loading-more-text">没有更多数据了</text>
							</view>
						</cell>
				</list>
			</view>
		</view>
	</view>
</template>

<script>
	import * as utils from "@/utils/service.js";
	var app = getApp();
	var commonHtmlTitle = '路况';
	export default {
		data() {
			return {
				loadingHtml: '../../../static/demo/data.html',
                webviewStyles: {
                    progress: false
                },
				latitude: 39.909,
				longitude: 116.39742,
				srcUrl: utils.webUrl,
				webViewHeight: '',
				contentShow: false,
				mapHeight: 0,
				newLabelId: 20,
				total: 0,
				refreshing: true,
				commentsOption: [],
				isLoad: false,
				noData: false,
                refreshText:'',
                loading:false,
                refreshing:false,
				loadErr: false,
				idList: [],
				mapGetIdList: [],
				pageSize: 10,
				selectId: '',
				commit: false,
				mapSelectId: '',
				searchData: {},
				repeatLoad: true,
				showMapLoading: true,
			}
		},
		onLoad(){
			// if(this.repeatLoad) {
			// 	this.getLocationData();
			// }
			this.getLocationData();
			uni.$on('refreshData_road', (data) => {
				this.contentShow = false;
				this.showMapLoading = true;
				this.getLocationData();
			})
			// var that = this;
			// this.longitude = app.globalData.longitude;
			// this.latitude = app.globalData.latitude;
		},
		onShow() {
			// if(!this.repeatLoad) {
			// 	this.getLocationData();
			// }
			
			// let that = this;
			// setTimeout(function () {
			// 	var query = uni.createSelectorQuery().in(this);
			// 	query.select('#myMap').boundingClientRect(data => {
			// 		that.mapHeight = data.height * 2;
			// 	}).exec();
			// 	console.log('map高度', that.mapHeight)
			// }, 1000);
		},
		methods: {
			showBigImg(item, index) {
			    uni.previewImage({
			     current: index,
			        urls: item.facadeImageAry,
			    });
			},
			commentsBlur() {
				this.commit = false
			},
			sendCallback() {
				//回复评论
				this.commit = true;
			},
			submit(val) {
				console.log('发送', val)
				if (!val) {
					uni.showToast({
						title: '评论不能为空',
						icon: 'none'
					})
					return;
				}
				this.commit = false;
				utils.postRequest('/mu/situation/comment/save', {
					situationId: this.detailInfo.id,
					content: val,
					commonHtmlTitle: commonHtmlTitle,
				})
				.then(res=>{
					if(res.retCode=="0000000"){
						uni.showToast({
							title: '评论成功',
							icon: 'none'
						})
						this.commentList('refresh', this.detailInfo.id);
					} else{
						uni.showToast({
							title: res.retDesc,
							icon: 'none'
						})
					}
				})
				.catch(err=>{
					console.log(err)
				})
			},
			getLocationData() {
				// uni.showLoading({
				// 	mask: true,
				// 	title: '拼命加载地图数据。。。'
				// });
				this.searchData = getApp().globalData.roadConditionSearch;
				var userInfo = uni.getStorageSync("userInfo");
				var pages = getCurrentPages();
				var prevPage = pages[pages.length - 1]; 
				var buriedPoint = {
					commonUserName: userInfo?JSON.parse(userInfo).userName:'',
					commonUserId: userInfo?JSON.parse(userInfo).userId:'',
					commonPhoneModel: getApp().globalData.commonPhoneModel,
					commonNowVersion: getApp().globalData.appVersion,
					commonSystemVersion: getApp().globalData.commonSystemVersion,
					commonFrontPath: prevPage.route
				}
				let query = '&type=' + 'roadCondition&time=' + new Date().getTime() + '&buriedPoint=' + JSON.stringify(buriedPoint);
				console.log(query);
				this.srcUrl = utils.webUrl;
				if(this.searchData.longitude && this.searchData.latitude) {
					this.srcUrl = this.srcUrl + '?longitude=' + this.longitude + '&latitude=' + this.latitude + '&newLongitude=' + this.searchData.longitude + '&newLatitude=' + this.searchData.latitude + '&ApiRootUrl=' + utils.ApiRootUrl + query;
					console.log('获取到的搜索信息', this.srcUrl);
				}else {
					let that = this;
					uni.getLocation({
						type: 'gcj02',
						geocode: true,
						success: function(res) {
							that.latitude = res.latitude;
							that.longitude = res.longitude;
							that.srcUrl = that.srcUrl + '?longitude=' + that.longitude + '&latitude=' + that.latitude + '&ApiRootUrl=' + utils.ApiRootUrl + query;
							that.$forceUpdate();
							console.log(that.srcUrl, '阿萨说')
						},
						fail: function() {
							uni.showToast({
								title: "请打开定位"
							})
						},
						complete:function(){
						}
					})
				}
				this.repeatLoad = false;
			},
			openLocation(res){
				uni.openLocation({
					latitude: res.latitude,	//维度
					longitude: res.longitude, //经度
					name: res.address,	//目的地定位名称
					scale: 15,	//缩放比例
					address: res.address	//导航详细地址
				})
			},
			reciveMessage(e){
				console.log(e)
			},
			recivePostMessage(e){ // 地图传递参数
				// uni.showLoading({
				// 	mask: true,
				// 	title: '拼命加载地图数据。。。'
				// });
				
				
				
				
				console.log('地图传递参数', e);
				let obj = e.detail.data[0];
				
				
				if (obj.subType == "跳转互助页面") {
					uni.navigateTo({
						url: '/pages/mutual/index/newIndex'
					})
					return;
				}
				if (obj.subType == "跳转服务站页面") {
					uni.switchTab({
						url: '/pages/index/srevice/srevice'
					})
					return;
				}
				
				
				if(obj.clearPoint == 1) {
					getApp().globalData.roadConditionSearch.latitude = '';
					getApp().globalData.roadConditionSearch.longitude = '';
					getApp().globalData.roadConditionSearch.searchVal = '';
				}
				// this.latitude = Number(obj.latitude);
				// this.longitude = Number(obj.longitude);
				this.mapGetIdList = obj.idList;
				console.log('原始id数组', this.mapGetIdList);
				if(!obj.selectId) {
					this.mapSelectId = '';
				}else {
					if(obj.selectId != this.mapSelectId) {
						this.mapSelectId = obj.selectId;
						for(let i in this.mapGetIdList) {
							if(this.mapGetIdList[i] == this.mapSelectId) {
								 this.mapGetIdList.splice(i, 1);
								 this.mapGetIdList.unshift(this.mapSelectId);
								 this.showContentList(true);
								 break;
							}
						}
					}else if(obj.selectId == this.mapSelectId) {
						this.mapSelectId = obj.selectId;
						for(let l in this.mapGetIdList) {
							if(this.mapGetIdList[l] == this.mapSelectId) {
								 this.mapGetIdList.splice(l, 1);
								 this.mapGetIdList.unshift(this.mapSelectId);
								 break;
							}
						}
					}
				}
				this.showMapLoading = false;
				console.log('选中后的id数组', this.mapSelectId, this.mapGetIdList);
				this.noData = false;
				this.idList = [];
				this.changeIdList();
			},
			changeIdList(flag) { // 去重后进行分页
				let ary = [];
				for(let k in this.mapGetIdList) {
					ary.push(this.mapGetIdList[k])
				}
				console.log('待分页的数据', ary);
				if(this.idList && this.idList.length > 0) {
					for(let a in ary) {
						for(let b in this.idList) {
							if(ary[a] == this.idList[b]) {
								ary.splice(a, 1);
							}
						}
					}
					console.log('去重后数据', ary);
				}
				let onloadAry = [];
				for(let i in ary) {
					if(Number(i) / this.pageSize < 1) {
						this.idList.push(ary[i])
						onloadAry.push(ary[i]);
					}
				}
				if(flag == 'onLoad') {
					return onloadAry;
				}else {
					this.commentsOption = [];
					this.getListData();
				}
				console.log('手动分页', this.idList);
			},
			getListData() {
				console.log('开始获取首页数据');
				var that = this;
				if(that.idList && that.idList.length == 0) {
					that.noData = true;
					return false;
				}
				var data = {
					longitude: that.longitude,
					latitude: that.latitude,
					idList: that.idList,
					commonHtmlTitle: commonHtmlTitle,
				};
				console.log('首页列表查询参数', data);
				utils.postRequest('/mu/situation/list', data)
				.then(function (res) {
					console.log('获取首页数据', res);
					if(res.retCode == "0000000"){
						that.commentsOption = res.rspBody.items;
						if(that.mapSelectId) {
							for(let i in that.commentsOption) {
								if(that.commentsOption[i].id == that.mapSelectId) {
									var checkedObj = that.commentsOption[i];
									that.commentsOption.splice(i, 1);
									that.commentsOption.unshift(checkedObj);
								}
							}
						}
						that.changeListImage();
						that.resetLoadMore();
						that.$forceUpdate();
						// that.total = res.rspBody.total;
					} else{
						uni.showToast({
							title: res.retDesc,
							icon: 'none'
						})
					}
				})
				.catch(err=>{
				})
				uni.hideLoading();
			},
			goReport() {
				var userInfo = uni.getStorageSync("userInfo");
				if (!userInfo) {
					uni.showModal({
						title: '请登录后操作',
						confirmText: '去登录',
						success: function(res) {
							if (res.confirm) {
								utils.loginSelf('/pages/roadCondition/index/newIndex')
							}
						}
					})
					return false;
				}
				var isDriveAC = JSON.parse(userInfo).attrs.driverVerify;
				var vehicleVerify = JSON.parse(userInfo).attrs.vehicleVerify;
				if (!isDriveAC && !vehicleVerify) {
					uni.showModal({
						title: '请认证驾驶证或行驶证',
						content: '货运中国社区只允许真实卡友发布信息，您必须认证驾驶证或行驶证后，才能使用上报功能。',
						confirmText: '去认证',
						cancelText: '再看看',
						success: function(res) {
							if (res.confirm) {
								uni.navigateTo({
									url: '../../my/driverVerify/newDriverVerify'
								})
							}
						}
					})
					return false;
				}
				uni.navigateTo({
					url:"/pages/roadCondition/releaseRoad/releaseRoad"
				})
			},
			jumpToSearch() {
				let query = '?type=' + 'roadCondition'
				uni.navigateTo({
					url:'/pages/search/search' + query
				})
			},
			getDistance(lat, lng){
				return utils.getDistance(lat, lng, this.latitude, this.longitude)
			},
			showContentList(flag) {
				let that = this;
				// if( that.mapHeight == 0) {
				// 	var query = uni.createSelectorQuery().in(that);
				// 	query.select('#myMap').boundingClientRect(data => {
				// 		console.log(data.height)
				// 		that.mapHeight = data.height * 2 - 120;
				// 	}).exec();
				// }
				that.contentShow = flag ? flag : !that.contentShow;
				// if(that.contentShow) {
				// 	// that.webViewHeight = 'height:350rpx';
				// }else {
				// 	that.webViewHeight = 'height:' + that.mapHeight + 'rpx';
				// }
				// console.log('map高度', that.mapHeight)
			},
			//开始下拉时
			onpullingdown(e){
				//当正在刷新的时候直接返回
				if(this.refreshing){
					return;
				}
				if (Math.abs(e.pullingDistance) > Math.abs(e.viewHeight)) {
					//当下拉的距离大于fresh组件的高度
					this.refreshText = "释放立即刷新";
				} else {
					this.refreshText = "下拉可以刷新";
				}
			},
			onrefresh(){
				if(this.loading){
					//当正在调用接口获取数据时，此时的下拉不做任何操作
					return;
				}
				this.refreshText="正在刷新...";
				//刷新数据
				//模拟接口延迟
				this.loading = true;
				this.refreshing = true;
				//刷新成功
				setTimeout(()=>{
					this.idList = [];
					this.changeIdList();
					this.noData = false;
					this.loading = false;
					this.refreshing = false;
					this.loadErr = false;
				},1000);
				//模拟刷新失败
				// setTimeout(()=>{
				//     this.loading = false;
				//     this.refreshText = '刷新失败，点击重试';
				//     this.loadErr = true;
				// },300);
				
			},
			// reFresh(){
			// 	if(!this.loadErr){
			// 		return;
			// 	}
			// 	this.refreshText="正在刷新...";
			// 	setTimeout(()=>{
			// 		this.commentsOption = 6;
			// 		this.loading = false;
			// 		this.refreshing = false;
			// 		this.loadErr = false;
			// 	},1000);
			// },
			resetLoadMore() {
				console.log('上拉加载复位');
			    this.$refs["commentsRef"].resetLoadmore();
				this.$forceUpdate()
			},
			
			loadMore(e){
				console.log('上拉加载', e);
				if(!this.noData) {
					var that = this;
					that.isLoad = true;
					let idList = this.changeIdList('onLoad');
					if(idList && idList.length == 0) {
						that.noData = true;
						that.isLoad = false;
						return false;
					}else if(idList && idList.length < that.pageSize) {
						that.noData = true;
					}
					var data = {
						longitude: that.longitude,
						latitude: that.latitude,
						idList: idList,
						commonHtmlTitle: commonHtmlTitle,
					};
					utils.postRequest('/mu/situation/list', data)
					.then(function (res) {
						console.log('上拉加载数据', res);
						if(res.retCode == "0000000"){
							let ary = res.rspBody.items;
							if(ary && ary.length > 0) {
								for(let i in ary) {
									that.commentsOption.push(ary[i])
								}
							}
							that.changeListImage();
							// that.total = res.rspBody.total;
						} else{
							uni.showToast({
								title: res.retDesc,
								icon: 'none'
							})
						}
						that.isLoad = false;
					})
					.catch(err=>{
						that.isLoad = false;
					})
				}
				
			    //模拟接口返回时间延迟
			  //   setTimeout(()=>{
					// this.isLoad = false;
					// this.commentsOption = this.commentsOption + 2;
			  //   },1500);
			    
			},
			changeListImage() {
				console.log('图片处理');
				for(let i in this.commentsOption) {
					this.commentsOption[i].facadeImageAry = [];
					if(this.commentsOption[i].facadeImage) {
						this.commentsOption[i].facadeImageAry.push(this.commentsOption[i].facadeImage);
						// this.commentsOption[i].facadeImageAry = this.commentsOption[i].facadeImage.split(',');
					}
				}
				console.log('图片数据', this.commentsOption);
			},
			situationStatusLike(type, status, item){
				var that = this;
				this.selectId = item.id;
				if(!item.id){
					return;
				}
				if(type==1){
					console.log(item.isDisLiked);
					if(status==1 && item.isLiked == 1){//取消点赞
						that.situationLike(type, 1, 0, item);
					} else if(status==1 && item.isLiked == 0){//点赞
						if(item.isDisLiked == 1) {
							uni.showToast({
								title: '请取消倒赞后再进行操作！',
								icon: 'none'
							})
							return false;
						}
						that.situationLike(type, 1, 1, item);
					} else if(status==0 && item.isDisLiked == 1){
						that.situationLike(type, 0, 0, item);
					} else if(status==0 && item.isDisLiked == 0){
						if(item.isLiked == 1) {
							uni.showToast({
								title: '请取消点赞后再进行操作！',
								icon: 'none'
							})
							return false;
						}
						that.situationLike(type, 0, 1, item);
					}
				} else{
					if(status==1&&item.isLiked==1){
						that.situationLike(type, 1, 0, item);
					} else{
						that.situationLike(type, 1, 1, item);
					}
				}
			},
			situationLike(situationtype, type, num, item){
				var that = this;
				var data = {
					type: type,
					status: num,
					flag: situationtype,
					commonHtmlTitle: commonHtmlTitle,
				}
				if(situationtype == 1){
					data.situationId = that.selectId;
				} else{
					data.commentId = item.id;
				}
				console.log(data)
				utils.postRequest('/mu/situation/like/save', data)
				.then(res=>{
					console.log(res)
					if(res.retCode == "0000000"){
						//路况操作
						if(situationtype == 1){
							//点赞操作
							if(type==1 && num==1 && !item.isLiked){
								item.likeNum = item.likeNum + 1;
								item.isLiked = 1;
								console.log(item)
							} else if(type==1){
								item.likeNum = item.likeNum - 1;
								item.isLiked = 0;
							}
							if(type==0 && num==1 && !item.isDisLiked){
								item.dislikeNum = item.dislikeNum + 1;
								item.isDisLiked = 1;
								console.log(item)
							} else if(type==0){
								item.dislikeNum = item.dislikeNum - 1;
								item.isDisLiked = 0;
							}
							that.$forceUpdate();
							// that.getList('refresh');
						} else{
							//评论点赞
							// that.getList('refresh');
						}
					} else{
						uni.showToast({
							title: res.retDesc,
							icon: 'none'
						})
					}
				})
				.catch(err=>{
					
				})
			},
			goDetail(item) { //去互助详情
				// var id = item.id;
				// uni.navigateTo({
				// 	url: "../detail/detail?id=" + id + "&latitude=" + this.latitude + "&longitude=" + this.longitude,
				// })
				uni.navigateTo({
					url: "/pages/roadCondition/roadDetails/newRoadDetails?id=" + item.id
				})
			},
			showStatus(status, flag) {
				switch(status) {
					case 1:
						return flag == 'color' ? 'color:#0077FF;' : '已解决';
					case 2:
						return  flag == 'color' ? 'color:#E02020;' : '未解决';
				}
			},
			showCommentsTime(item) {
				let time = item.createdDt.split(' ');
				return item.dateDesc;
				 // + time[1];
			},
			back() {
				uni.navigateBack({
					delta: 1
				})
			}
		}
	}
</script>

<style>
	.mutual {
	}
	.mapLoadingBox {
		position: fixed;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		z-index:999999;
	}
	.searchHead {
		padding:90rpx 40rpx 0 40rpx;
		flex-direction: row;
		justify-content: space-between;
		align-items: center;
		/* width: 100vw; */
	}
	.back {
		width: 20rpx;
		height: 40rpx;
		margin-right: 20rpx;
	}
	.searchBox {
		border-radius: 32rpx;
		background: rgba(245, 246, 246, 0.9);
		padding: 0 0 0 26rpx;
		height: 64rpx;
		width:452rpx;
		flex-direction: row;
		justify-content: flex-start;
	}
	.searchMsg {
		font-size:28rpx;
		color: #777;
		line-height: 64rpx;
		font-weight:bold;
	}
	.search-img {
		width: 36rpx;
		height:36rpx;
		margin-top: 14rpx;
		margin-right:18rpx;
	}
	.addServiceBtn {
		background: #FF7D4A;
		height: 64rpx;
		width:142rpx;
		border-radius: 32rpx;
		margin-left: 40rpx;
		text-align: center;
		flex-direction: row;
		justify-content: flex-start;
		padding: 0 20rpx;
	}
	.addServiceBtnMsg {
		font-size:28rpx;
		color: #fff;
		line-height: 64rpx;
	}
	.add-img {
		width: 30rpx;
		height: 30rpx;
		margin-top: 16rpx;
		margin-right: 10rpx;
	}
	.mapView {
		transition-property: height;
        transition-duration:0.3s;
        transition-delay:0.1s;
        transition-timing-function: cubic-bezier(0.25, 0.1, 0.25, 1.0);
	}
	.contentList {
		width:750rpx;
		position: fixed;
		bottom:0;
		border-radius: 40rpx 40rpx 0px 0px;
		background-color: #FFF;
		padding: 20rpx 0;
		transition-property: height;
        transition-duration:0.3s;
        transition-delay:0.1s;
        transition-timing-function: cubic-bezier(0.25, 0.1, 0.25, 1.0);
	}
	.notShow {
		height: 112rpx;
	}
	.isShow {
		height: 1000rpx;
	}
	.contentListBtn {
		flex-direction: row;
		justify-content: center;
	}
	.contentStyleIcon {
		width: 80rpx;
		height: 10rpx;
		background: #EEEEEE;
		border-radius: 6rpx;
		/* margin:0 auto; */
	}
	.contentStyleIconMsg {
		text-align: center;
		font-size:28rpx;
		color: #FF7D4A;
		text-align: center;
		margin-top:20rpx;
	}
	.listBox {
		height: 900rpx;
		padding:0 20rpx;
	}
	.commentslist {
		height: 900rpx;
		width: 710rpx;
		position: absolute;
		top:0;
		bottom: 0;
		left:20rpx;
		right: 0;
	}
	.dataList {
		/* flex: 1; */
		flex-direction: row;
		justify-content: space-between;
		padding: 20rpx 10rpx 0 10rpx;
		width:710rpx;
		border-radius:16rpx;
	}
	.userAvatar {
		height:80rpx;
		width:80rpx;
		border-radius:100%;
		/* background-color: #333; */
	}
	.commentsContentBox {
		flex: 1;
		padding: 0 0 0 10rpx;
	}
	.commentsLine {
		height: 2rpx;
		background-color:  #E2E2E2;
		margin-top:10rpx;
	}
	.commentsHead {
		flex-direction: row;
		justify-content: space-between;
		align-items: center;
	}
	.commentsHeadNameBox {
		flex: 1;
		height: 42rpx;
		flex-direction: row;
		justify-content: flex-start;
	}
	.commentsHeadName {
		font-size:30rpx;
		color:#507DAF;
		line-height: 42rpx;
		text-overflow: ellipsis;
		lines: 1;
		/* overflow: hidden;
		text-overflow: ellipsis;
		white-space: nowrap; */
	}
	.commentsStatusSyb {
		height: 42rpx;
		padding:0 8rpx;
		border-radius: 8rpx;
		margin-left:8rpx;
	}
	.commentsStatusSybMsg {
		line-height: 42rpx;
		font-size:26rpx;
	}
	.commentsDistance {
		flex-direction: row;
		align-items: center;
	}
	.disTanceNum {
		font-size:24rpx;
		color:#777;
		line-height: 42rpx;
	}
	.disTanceMsg {
		font-size:24rpx;
		color:#FF7D4A;
		line-height: 42rpx;
	}
	.disTanceSyb {
		font-size:24rpx;
		color:#777;
		line-height: 42rpx;
	}
	.newnavigationIcon {
		width: 20rpx;
		height: 20rpx;
		margin-right:10rpx;
	}
	.commentsBody {
		margin: 12rpx 0;
		height: 68rpx;
	}
	.commentsMsg {
		line-height: 34rpx;
		font-size: 28rpx;
		color:#333;
		text-overflow: ellipsis;
		lines: 2;
	}
	.commentsAddress {
		flex-direction: row;
		justify-content: flex-start;
		align-items: center;
	}
	.addressIcon {
		width:20rpx;
		height:24rpx;
		margin-right:10rpx;
	}
	.addressMsg {
		line-height: 36rpx;
		font-size:26rpx;
		color:#777;
		text-overflow: ellipsis;
		lines: 1;
		flex: 1;
		/* overflow: hidden;
		white-space: nowrap; */
	}
	.commentsImageBox {
		flex-direction: row;
		justify-content: flex-start;
		align-items: center;
		margin:20rpx 0 0 0;
	}
	.commentsImageList {
		width:100rpx;
		height:100rpx;
		/* background-color: #333; */
		margin-right: 10rpx;
	}
	.commentsFoot {
		flex-direction: row;
		justify-content: space-between;
		align-items: center;
		margin:20rpx 0 0 0;
	}
	.commentsTime {
		flex-direction: row;
		justify-content: flex-start;
		align-items: center;
		height: 34rpx;
	}
	.commentsTimeIcon {
		width:22rpx;
		height: 22rpx;
		margin-right:10rpx;
	}
	.commentsTimeMsg {
		line-height: 34rpx;
		font-size: 24rpx;
		color:#aaa;
	}
	.commentsStatus {
		flex-direction: row;
		justify-content: flex-start;
		align-items: center;
		height: 34rpx;
	}
	.commentsStatusBox {
		flex-direction: row;
		justify-content: flex-start;
		align-items: center;
		height: 34rpx;
	}
	.commentsStatusIcon {
		width: 24rpx;
		height: 24rpx;
		margin-right:10rpx;
	}
	.commentsStatusMsg {
		line-height: 34rpx;
		font-size: 24rpx;
		color:#aaa;
	}
	.loading-more {
	    align-items: center;
	    justify-content: center;
	    padding-top: 14px;
	    padding-bottom: 14px;
	    text-align: center;
	    flex-direction: row;
	    width:750rpx;
	}
	.loading-more-text {
	    font-size: 28upx;
	    color: #999;
	}
	.showDataBorder {
		border-width: 2rpx;
		border-style: solid;
		border-color: #909399;
	}
	.showNoBorder {
		border-width: 2rpx;
		border-style: solid;
		border-color: #FFF;
	}
</style>
